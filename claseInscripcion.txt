package proyectofinal;
import javax.swing.*;
 import java.io.*;
/**
 *
 * @author Carolina EM
 */
public class Inscripcion {
    String nct,clave,name_Arch="inscripcion";
    long tam_R=16;
    Alumno al=new Alumno();
    Materia mat=new Materia();
    
    public void Inscripciones(){
        boolean enc=false;
        al.ordenar();
        mat.ordenar();
        int r=Integer.parseInt(JOptionPane.showInputDialog("¿Inscribir?\n (Si=1 ; No=0)"));
        while(r<0||r>1){
            r=Integer.parseInt(JOptionPane.showInputDialog("ERROR\n¿Inscribir?(Si=1 ; No=0)"));
        }
        while(r==1){
            do {
                nct=JOptionPane.showInputDialog(null,"No. de control: "," Alumno a Inscribir ",1);
                nct=String.format("%-8s", nct);
                al.buscar(nct);
                if(nct.equalsIgnoreCase(al.no_Ctrl)){
                    boolean encM=false;
                    do{
                        clave=JOptionPane.showInputDialog(null,"Clave Materia: ","Materia en la que Inscribira",1);
                        clave=String.format("%-4s", clave);
                        mat.buscar(clave);
                        if(clave.equalsIgnoreCase(mat.clave)){
                            RandomAccessFile w;
                            try {
                                w=new RandomAccessFile(name_Arch+".dat","rw");
                                w.seek(w.length());
                                w.writeUTF(nct);
                                w.writeUTF(clave);
                            } catch (Exception e) {
                                System.err.println("Archivo no encontrado");
                            }
                        }else{
                            JOptionPane.showMessageDialog(null, "No existe materia");
                        }
                        int r2=Integer.parseInt(JOptionPane.showInputDialog(null, "Se inscribe en una nueva materia?\n (Si=1 ; No=0)"));
                        while(r<0||r>1){
                            r2=Integer.parseInt(JOptionPane.showInputDialog("ERROR\nSe inscribe en una nueva materia\n (Si=1 ; No=0)"));                        
                        }
                        if(r2==0){
                            encM=false;
                        }
                    }while(encM);                                        
                }else{
                    int r1=Integer.parseInt(JOptionPane.showInputDialog(null, "No encontrado\nDesea continuar(Si=1 ; No=0)"));
                    while(r<0||r>1){
                        r1=Integer.parseInt(JOptionPane.showInputDialog("ERROR\nDesea continuar(Si=1 ; No=0)"));                        
                    }
                    if(r1==0){
                        enc=false;
                        r=0;
                    }
                }
            } while (enc); 
        }
    }
    
    void ordenar() {
        RandomAccessFile wr;
        Inscripcion i=new Inscripcion();
        Inscripcion aux=new Inscripcion();
        int nR;
        try{
            wr=new RandomAccessFile(name_Arch+".dat","rw");
            wr.seek(0);
            nR=(int)(wr.length()/tam_R);
            for(int p=1;p<nR;p++){//Pasadas
                for(int c=1;c<=(nR-1);c++){//Comparaciones
                    i=lectura(wr,c-1);
                    aux=lectura(wr,c);
                    if(i.nct.compareToIgnoreCase(aux.nct)>0){
                        escritura(aux,wr,c-1);
                        escritura(i,wr,c);
                    }
                }
            }
            wr.close();            
        }catch(IOException e){
            System.err.println("Archivo no encontrado! ");
        }
    }
    
    public Inscripcion lectura(RandomAccessFile wr, int c) {
        Inscripcion i=new Inscripcion();
        try{
            wr.seek(c*tam_R);
            i.nct=wr.readUTF();
            i.clave=wr.readUTF();            
        }catch(Exception e){
            System.err.println(" Proceso fallido(Lectura)! ");
        }
        return i;
    }
    
    private void escritura(Inscripcion i, RandomAccessFile wr, int c) {
        try {
            wr.seek(c*tam_R);
            wr.writeUTF(i.nct);
            wr.writeUTF(i.clave);
        } catch (Exception e) {
            System.err.println(" Proceso fallido(escritura)! ");
        }
    }
    
    void reporte() {
        RandomAccessFile r;       
        PrintWriter pw=null;
        try {
            r=new RandomAccessFile(name_Arch+".dat","r");
            pw=new PrintWriter(name_Arch+".txt");            
            r.seek(0);
            String men="";
            System.out.println("Tamaño del archivo: "+r.length());
            System.out.println("Registros: "+r.length()/tam_R);
            pw.println("     |  INSCRIPCIONES  |                          \n\n");
            pw.println("----------------------------------");
            pw.println("|No. de control |\tClave Materia|");
            pw.println("----------------------------------");
            for (long i=0;i<r.length();i+=tam_R) {
                men=String.format("\t%-10s\t    %-6s", r.readUTF(), r.readUTF());
                pw.println(men);
            }                        
            r.close();
        } catch (IOException e) {
            System.err.println("Archivo no encontrado! "+e.toString());
        } finally{
            if(pw!=null){
                pw.close();
            }
        }
    }
    
    public void CargaAc(){
        ordenar();
        al.ordenar();
        mat.ordenar();
        RandomAccessFile r;
        PrintWriter w=null;
        String nC,clave,men,aux="";
        try {
            r=new RandomAccessFile(name_Arch+".dat","r");
            w=new PrintWriter("Carga_Academica.txt");
            r.seek(0);
            w.println("                         |  CARGA ACADEMICA  |                     \n");
            for (long i=0;i<r.length();i+=16){
                //System.out.println("i: "+i);
                nC=r.readUTF();
                clave=r.readUTF();
                al.buscar(nC);
                mat.buscar(clave);
                
                
                if(nC.equals(aux)){
                    
                    men=String.format("%-10s\t\t%-42s%-2d", mat.clave, mat.name_M,mat.cred);
                    w.println(men);
                }else{
                    w.println(" \n ");
                    w.println("-----------------------------------------------------------------------------------");
                    w.println("No. Control: "+al.no_Ctrl+"\t\t\t\nNombre: "+al.name_Al+" \t\t\t\nSemestre: "+al.sem);
                    w.println("-----------------------------------------------------------------------------------");
                   // men=String.format("%-10s\t\t%-42s%-2d", al.no_Ctrl, al.name_Al,al.sem);
                    //w.println(men);
                   
                    w.println("Clave Materia\tNombre Materia\t\t\t\t   Creditos");
                    w.println("-----------------------------------------------------------------------------------");
                    men=String.format("%-10s\t\t%-42s%-2d", mat.clave, mat.name_M,mat.cred);
                    w.println(men);
                }                                               
                aux=nC;
            }
            r.close();  
            w.close();
        } catch (Exception e) {
            System.err.println(" Proceso fallido(lectura)! ");
        }
        
    }

    
}